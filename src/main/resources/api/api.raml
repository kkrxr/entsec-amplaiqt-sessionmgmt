#%RAML 1.0
title: AMPLAIQT SessionManagement SECAPI
baseUri: entsec/anplaiqt/sessionmgmt/v1/

#entsec-amplaiqt-sessionmgmt

types:
  getTokenResponseType: !include datatypes/getTokenResponse.schema.json
#--- End of Type Defs ---#

traits:
  correlated-by-headers:
    description: 
      Any callers to internal services should provide X-Correlation-ID and X-Message-ID headers.
      We might have a "correlated-by-headers-optional" trait for external facing
      services where our incoming adapter can generate these on behalf of a "dumb" client. 
      The service should echo back the corelation headers in the response to the caller 
      so we can properly trace the round-trip. 
    headers:
      X-Correlation-ID:
        type: string
      X-Message-ID:
        type: string
    responses:
      200:
        headers:
          X-Correlation-ID:
            type: string
          X-Message-ID:
            type: string
      404:
        headers:
          X-Correlation-ID:
            type: string
          X-Message-ID:
            type: string
      500:
        headers:
          X-Correlation-ID:
            type: string
          X-Message-ID:
            type: string

  client-id-required:
    description:
      The conventional headers for AnyPoint policy-based authentication
    headers:
      client_id:
        type: string
      client_secret:
        type: string

#--- end of traits --#

/tokenIQT:  
  get:
    is: [correlated-by-headers, client-id-required]
    description: Returns TokenIQT via Response Message

    queryParameters: # at least one parameter required
        loginCredReq: 
          type: boolean
          required: false
        amplaSystem: 
          type: string
          required: false
       
    responses:
      200:          
        body:
          application/json:
            type: getTokenResponseType
            example: !include examples/getTokenResponse.json
      404:  
        body:
          application/json:
            type: object
            example: |
              {
                "message": "Consignment XYZ does not exist"
              }
      500:    
        body:
          application/json:
            type: object
            example: |
              {
                "message": "Internal Server Error"
              }         